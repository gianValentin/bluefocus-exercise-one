{
	"info": {
		"_postman_id": "7a9d01f3-9f33-4b5c-ae7d-5bff7ba3b8dc",
		"name": "bluefocus",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10643469"
	},
	"item": [
		{
			"name": "currency",
			"item": [
				{
					"name": "findAll",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/currency",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"currency"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "transaction",
			"item": [
				{
					"name": "generate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 3.729,\r\n    \"originCurrency\": {\r\n        \"id\": 1,\r\n        \"name\": \"PEN\",\r\n        \"value\": 3.79\r\n    },\r\n    \"fateCurrency\": {\r\n        \"id\": 3,\r\n        \"name\": \"USD\",\r\n        \"value\": 1.0\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/transaction",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "findById",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/transaction/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"transaction",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 3.729,\r\n    \"originCurrency\": {\r\n        \"id\": 1,\r\n        \"name\": \"PEN\",\r\n        \"value\": 3.79\r\n    },\r\n    \"fateCurrency\": {\r\n        \"id\": 2,\r\n        \"name\": \"ARS\",\r\n        \"value\": 349.97\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/transaction/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"transaction",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "audit",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/transaction/audit",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"transaction",
								"audit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth-JWT",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var authorization = postman.getResponseHeader(\"Authorization\")\r",
									"postman.setEnvironmentVariable(\"Authorization\", authorization);\r",
									"pm.test(\"Ok\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    postman.setEnvironmentVariable(\"Authorization\", jsonData.access_token);\r",
									"    postman.setEnvironmentVariable(\"Refresh-Token\", jsonData.refresh_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"brian\",\r\n    \"username\": \"brianValentin\",\r\n    \"password\": \"1234\",\r\n    \"lastname\": \"valenti\",\r\n    \"email\": \"brian@valentin.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/auth/register",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/* var authorization = postman.getResponseHeader(\"Authorization\")\r",
									"postman.setEnvironmentVariable(\"Authorization\", authorization); */\r",
									"pm.test(\"Ok\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    postman.setEnvironmentVariable(\"Authorization\", jsonData.access_token);\r",
									"    postman.setEnvironmentVariable(\"Refresh-Token\", jsonData.refresh_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"brianValentin\",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var authorization = postman.getResponseHeader(\"Authorization\")\r",
									"postman.setEnvironmentVariable(\"Authorization\", authorization);\r",
									"pm.test(\"Ok\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    postman.setEnvironmentVariable(\"Authorization\", jsonData.access_token);\r",
									"    postman.setEnvironmentVariable(\"Refresh-Token\", jsonData.refresh_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Refresh-Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/refresh-token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Authorization}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}